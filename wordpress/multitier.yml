---
# Deploying the database
- name: Deploying Wordpress DB
  hosts: db
  become: true
  pre_tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
    - name: Wait for cache update
      ansible.builtin.wait_for:
        timeout: 5
      delegate_to: localhost
  vars_files:
    - wp.vars.yml
  tasks:
    - name: Install MariaDB
      ansible.builtin.apt:
        name:
          - unzip
          - mariadb-server
          - python3-pymysql
        state: present

    - name: Start services
      ansible.builtin.service:
        name: mariadb
        state: started

    - name: Set MariaDB root password
      community.mysql.mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Add MariaDB client config
      ansible.builtin.blockinfile:
        path: /root/.my.cnf
        block: |
          [client]
          user = root
          password = "{{ mysql_root_password }}"
        create: true
        mode: '0400'
        owner: root
        group: root

    - name: Add MariaDB server socket config
      ansible.builtin.blockinfile:
        path: /etc/mysql/mariadb.conf.d/99-mysqld_socket.cnf
        block: |
          [mysqld]
          bind-address = 0.0.0.0
        create: true
        mode: '0644'
        owner: root
        group: root
      notify: Restart mariadb

    - name: Start services
      ansible.builtin.service:
        name: mariadb
        state: started

    - name: Create wordpress database
      community.mysql.mysql_db:
        db: "{{ wordpress_db_name }}"
        state: present
    - name: Create wordpress credentials
      community.mysql.mysql_user:
        name: "{{ wordpress_db_user }}"
        password: "{{ wordpress_db_password }}"
        priv: "{{ wordpress_db_name }}.*:ALL"
        host: '%'
        state: present

  handlers:
    - name: Restart mariadb
      ansible.builtin.service:
        name: mysql
        state: restarted

# Deploying app Wordpress
- name: Deploying Wordpress App
  hosts: web
  become: true
  pre_tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
    - name: Wait for cache update
      ansible.builtin.wait_for:
        timeout: 5
      delegate_to: localhost
  vars_files:
    - wp.vars.yml
  tasks:
    - name: Install packages
      ansible.builtin.apt:
        name:
          - apache2
          - unzip
          - php
          - php
          - libapache2-mod-php
          - php-bcmath
          - php-curl
          - php-imagick
          - php-intl
          - php-json
          - php-mbstring
          - php-cli
          - php-cgi
          - php-mysql
          - php-xml
          - php-zip
        state: present

    - name: Start services
      ansible.builtin.service:
        name: apache2
        state: started

    - name: Create the Wordpress DocumentRoot
      ansible.builtin.file:
        path: "{{ wordpress_documentroot }}"
        state: directory
        mode: '0755'
        owner: www-data
        group: www-data

    - name: Download latest Wordpress archive
      ansible.builtin.get_url:
        url: "{{ wordpress_source_url }}"
        dest: "{{ wordpress_download_file }}"
        mode: '0440'

    - name: Unarchive Wordpress that is already on the remote machine
      ansible.builtin.unarchive:
        src: "{{ wordpress_download_file }}"
        dest: "{{ wordpress_documentroot }}"
        remote_src: true

    - name: Recursively change ownership of a directory
      ansible.builtin.file:
        path: "{{ wordpress_documentroot }}"
        state: directory
        recurse: true
        owner: www-data
        group: www-data

    - name: Copy Wordpress template
      ansible.builtin.template:
        src: wordpress.j2
        dest: /etc/apache2/sites-available/wordpress.conf
        mode: '0640'
        owner: www-data
        group: www-data

    - name: Copy wp-config template
      ansible.builtin.template:
        src: wp-config.php.j2
        dest: "{{ wordpress_documentroot }}/wordpress/wp-config.php"
        mode: '0640'
        owner: www-data
        group: www-data

    - name: Enable Wordpress
      ansible.builtin.command:
        argv:
          - a2ensite
          - wordpress
      register: enable_wordpress
      changed_when: enable_wordpress.rc != 0
      notify: Restart apache2

    - name: Enable Apache2 module rewrite
      community.general.apache2_module:
        name: rewrite
        state: present
      notify: Restart apache2

    - name: Disable Default site
      ansible.builtin.command:
        argv:
          - a2dissite
          - 000-default
      register: disable_default
      changed_when: disable_default.rc != 0
      notify: Restart apache2

  handlers:
    - name: Restart apache2
      ansible.builtin.service:
        name: apache2
        state: restarted
...
